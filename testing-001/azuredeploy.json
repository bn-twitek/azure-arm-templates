{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"dnsLabelPrefix": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"Password": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"userImageVhdURI": {
			"type": "string",
			"metadata": {
				"description": "Storage for your virtual machine disks"
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "URL for the OS Disk"
			}
		}
	},
	"variables": {
		"apiVersion": "2015-06-15",
		"location": "[resourceGroup().location]",
		"imagePublisher": "barracudanetworks",
		"imageOffer": "barracuda-ng-firewall",
		"imageSku": "byol",
		"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'ngf')]",
		"storageAccountType": "Standard_LRS",
		"publicIPAddressName": "myPublicIP",
		"addressPrefix": "10.0.0.0/16",
		"virtualNetworkName": "MyVNET",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"nicName": "myVMNic",
		"vmName": "barracuda-ng-firewall",
		"vmSize": "Standard_D2",
		"publicIPAddressType": "Dynamic",
		"vmStorageAccountContainerName": "vhds",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('storageAccountName')]",
			"apiVersion": "[variables('apiVersion')]",
			"location": "[variables('location')]",
			"properties": { "accountType": "[variables('storageAccountType')]" }
		},
		{
			"apiVersion": "[variables('apiVersion')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[variables('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": { "domainNameLabel": "[parameters('dnsLabelPrefix')]" }
			}
		},
		{
			"apiVersion": "[variables('apiVersion')]",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]"
						}
					}
				]
			}
		},
		{
			"apiVersion": "[variables('apiVersion')]",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "[variables('apiVersion')]",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('vmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "this_value_is_ignored",
					"adminPassword": "[parameters('Password')]"
				},
				"storageProfile": {
					"osDisk": {
						"name": "osdisk",
						"osType" : "linux",
						"image": {
							"uri" : "[parameters('userImageVhdURI')]"
						},
						"vhd": {
							"uri": "[concat(parameters('storageAccountName'),'/',variables('vmName'),'-OS.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": "false"
					}
				}
			}
		}
	]
}

